  之前面试的时候，面试官问过用在深拷贝上写尾递归实现是什么意思？
我原来在看深拷贝的时候，看到一个说法是通过尾递归调用实现。而后，我在深入理解es6看到了尾调用的优化。
  那么尾调用和尾递归有什么区别呢？
  1.尾调用指的是在函数作为另外一个函数的最后一条语句被调用。
   eg： function do(){
        return doelse();
       }
       注意：如下情况不是：
       function do(){
        return doelse()+1;
       }
  2.尾递归即作为尾调用调用本身。
     好处是即只保留内层函数的调用帧。如果所有函数都是尾调用，那么完全可以做到每次执行时，调用帧只有一项，这将大大节省内存。这就是“尾调用优化”的意义。
     注意，只有不再用到外层函数的内部变量，内层函数的调用帧才会取代外层函数的调用帧，否则就无法进行“尾调用优化”。
     
     尾递归可以有效优化栈溢出的问题。
